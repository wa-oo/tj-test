<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.mapper.oracle.ChargeDependentMapper" >
  <resultMap id="BaseResultMap" type="com.example.model.oracle.ChargeDependent" >
    <id column="ID" property="id" jdbcType="DECIMAL" />
    <result column="CHARGE_ID" property="chargeId" jdbcType="CHAR" />
    <result column="CHARGE_NAME" property="chargeName" jdbcType="CHAR" />
    <result column="CHARGE_AMOUNT" property="chargeAmount" jdbcType="CHAR" />
    <result column="CREATE_TIME" property="createTime" jdbcType="CHAR" />
    <result column="CREATE_ID" property="createId" jdbcType="VARCHAR" />
    <result column="REMARK" property="remark" jdbcType="CHAR" />
    <result column="STATE" property="state" jdbcType="CHAR" />
    <result column="MATERIAL_VALIDITY" property="materialValidity" jdbcType="CHAR" />
    <result column="LAW_NAME" property="lawName" jdbcType="CHAR" />
    <result column="LAW_NUMBER" property="lawNumber" jdbcType="CHAR" />
    <result column="LAW_TEXT" property="lawText" jdbcType="CHAR" />
    <result column="FILE_ID" property="fileId" jdbcType="CHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ID, CHARGE_ID, CHARGE_NAME, CHARGE_AMOUNT, CREATE_TIME, CREATE_ID, REMARK, STATE, 
    MATERIAL_VALIDITY, LAW_NAME, LAW_NUMBER, LAW_TEXT, FILE_ID
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.example.model.oracle.ChargeDependentExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from TJ_CHARGE_DEPENDENT
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.math.BigDecimal" >
    select 
    <include refid="Base_Column_List" />
    from TJ_CHARGE_DEPENDENT
    where ID = #{id,jdbcType=DECIMAL}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.math.BigDecimal" >
    delete from TJ_CHARGE_DEPENDENT
    where ID = #{id,jdbcType=DECIMAL}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.model.oracle.ChargeDependentExample" >
    delete from TJ_CHARGE_DEPENDENT
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.model.oracle.ChargeDependent" >
    insert into TJ_CHARGE_DEPENDENT (ID, CHARGE_ID, CHARGE_NAME, 
      CHARGE_AMOUNT, CREATE_TIME, CREATE_ID, 
      REMARK, STATE, MATERIAL_VALIDITY, 
      LAW_NAME, LAW_NUMBER, LAW_TEXT, 
      FILE_ID)
    values (#{id,jdbcType=DECIMAL}, #{chargeId,jdbcType=CHAR}, #{chargeName,jdbcType=CHAR}, 
      #{chargeAmount,jdbcType=CHAR}, #{createTime,jdbcType=CHAR}, #{createId,jdbcType=VARCHAR}, 
      #{remark,jdbcType=CHAR}, #{state,jdbcType=CHAR}, #{materialValidity,jdbcType=CHAR}, 
      #{lawName,jdbcType=CHAR}, #{lawNumber,jdbcType=CHAR}, #{lawText,jdbcType=CHAR}, 
      #{fileId,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.example.model.oracle.ChargeDependent" >
    insert into TJ_CHARGE_DEPENDENT
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="chargeId != null" >
        CHARGE_ID,
      </if>
      <if test="chargeName != null" >
        CHARGE_NAME,
      </if>
      <if test="chargeAmount != null" >
        CHARGE_AMOUNT,
      </if>
      <if test="createTime != null" >
        CREATE_TIME,
      </if>
      <if test="createId != null" >
        CREATE_ID,
      </if>
      <if test="remark != null" >
        REMARK,
      </if>
      <if test="state != null" >
        STATE,
      </if>
      <if test="materialValidity != null" >
        MATERIAL_VALIDITY,
      </if>
      <if test="lawName != null" >
        LAW_NAME,
      </if>
      <if test="lawNumber != null" >
        LAW_NUMBER,
      </if>
      <if test="lawText != null" >
        LAW_TEXT,
      </if>
      <if test="fileId != null" >
        FILE_ID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=DECIMAL},
      </if>
      <if test="chargeId != null" >
        #{chargeId,jdbcType=CHAR},
      </if>
      <if test="chargeName != null" >
        #{chargeName,jdbcType=CHAR},
      </if>
      <if test="chargeAmount != null" >
        #{chargeAmount,jdbcType=CHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=CHAR},
      </if>
      <if test="createId != null" >
        #{createId,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=CHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=CHAR},
      </if>
      <if test="materialValidity != null" >
        #{materialValidity,jdbcType=CHAR},
      </if>
      <if test="lawName != null" >
        #{lawName,jdbcType=CHAR},
      </if>
      <if test="lawNumber != null" >
        #{lawNumber,jdbcType=CHAR},
      </if>
      <if test="lawText != null" >
        #{lawText,jdbcType=CHAR},
      </if>
      <if test="fileId != null" >
        #{fileId,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.model.oracle.ChargeDependentExample" resultType="java.lang.Integer" >
    select count(*) from TJ_CHARGE_DEPENDENT
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update TJ_CHARGE_DEPENDENT
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=DECIMAL},
      </if>
      <if test="record.chargeId != null" >
        CHARGE_ID = #{record.chargeId,jdbcType=CHAR},
      </if>
      <if test="record.chargeName != null" >
        CHARGE_NAME = #{record.chargeName,jdbcType=CHAR},
      </if>
      <if test="record.chargeAmount != null" >
        CHARGE_AMOUNT = #{record.chargeAmount,jdbcType=CHAR},
      </if>
      <if test="record.createTime != null" >
        CREATE_TIME = #{record.createTime,jdbcType=CHAR},
      </if>
      <if test="record.createId != null" >
        CREATE_ID = #{record.createId,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null" >
        REMARK = #{record.remark,jdbcType=CHAR},
      </if>
      <if test="record.state != null" >
        STATE = #{record.state,jdbcType=CHAR},
      </if>
      <if test="record.materialValidity != null" >
        MATERIAL_VALIDITY = #{record.materialValidity,jdbcType=CHAR},
      </if>
      <if test="record.lawName != null" >
        LAW_NAME = #{record.lawName,jdbcType=CHAR},
      </if>
      <if test="record.lawNumber != null" >
        LAW_NUMBER = #{record.lawNumber,jdbcType=CHAR},
      </if>
      <if test="record.lawText != null" >
        LAW_TEXT = #{record.lawText,jdbcType=CHAR},
      </if>
      <if test="record.fileId != null" >
        FILE_ID = #{record.fileId,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update TJ_CHARGE_DEPENDENT
    set ID = #{record.id,jdbcType=DECIMAL},
      CHARGE_ID = #{record.chargeId,jdbcType=CHAR},
      CHARGE_NAME = #{record.chargeName,jdbcType=CHAR},
      CHARGE_AMOUNT = #{record.chargeAmount,jdbcType=CHAR},
      CREATE_TIME = #{record.createTime,jdbcType=CHAR},
      CREATE_ID = #{record.createId,jdbcType=VARCHAR},
      REMARK = #{record.remark,jdbcType=CHAR},
      STATE = #{record.state,jdbcType=CHAR},
      MATERIAL_VALIDITY = #{record.materialValidity,jdbcType=CHAR},
      LAW_NAME = #{record.lawName,jdbcType=CHAR},
      LAW_NUMBER = #{record.lawNumber,jdbcType=CHAR},
      LAW_TEXT = #{record.lawText,jdbcType=CHAR},
      FILE_ID = #{record.fileId,jdbcType=CHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.model.oracle.ChargeDependent" >
    update TJ_CHARGE_DEPENDENT
    <set >
      <if test="chargeId != null" >
        CHARGE_ID = #{chargeId,jdbcType=CHAR},
      </if>
      <if test="chargeName != null" >
        CHARGE_NAME = #{chargeName,jdbcType=CHAR},
      </if>
      <if test="chargeAmount != null" >
        CHARGE_AMOUNT = #{chargeAmount,jdbcType=CHAR},
      </if>
      <if test="createTime != null" >
        CREATE_TIME = #{createTime,jdbcType=CHAR},
      </if>
      <if test="createId != null" >
        CREATE_ID = #{createId,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        REMARK = #{remark,jdbcType=CHAR},
      </if>
      <if test="state != null" >
        STATE = #{state,jdbcType=CHAR},
      </if>
      <if test="materialValidity != null" >
        MATERIAL_VALIDITY = #{materialValidity,jdbcType=CHAR},
      </if>
      <if test="lawName != null" >
        LAW_NAME = #{lawName,jdbcType=CHAR},
      </if>
      <if test="lawNumber != null" >
        LAW_NUMBER = #{lawNumber,jdbcType=CHAR},
      </if>
      <if test="lawText != null" >
        LAW_TEXT = #{lawText,jdbcType=CHAR},
      </if>
      <if test="fileId != null" >
        FILE_ID = #{fileId,jdbcType=CHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=DECIMAL}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.model.oracle.ChargeDependent" >
    update TJ_CHARGE_DEPENDENT
    set CHARGE_ID = #{chargeId,jdbcType=CHAR},
      CHARGE_NAME = #{chargeName,jdbcType=CHAR},
      CHARGE_AMOUNT = #{chargeAmount,jdbcType=CHAR},
      CREATE_TIME = #{createTime,jdbcType=CHAR},
      CREATE_ID = #{createId,jdbcType=VARCHAR},
      REMARK = #{remark,jdbcType=CHAR},
      STATE = #{state,jdbcType=CHAR},
      MATERIAL_VALIDITY = #{materialValidity,jdbcType=CHAR},
      LAW_NAME = #{lawName,jdbcType=CHAR},
      LAW_NUMBER = #{lawNumber,jdbcType=CHAR},
      LAW_TEXT = #{lawText,jdbcType=CHAR},
      FILE_ID = #{fileId,jdbcType=CHAR}
    where ID = #{id,jdbcType=DECIMAL}
  </update>
</mapper>